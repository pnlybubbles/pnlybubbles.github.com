<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>あわあわのブログ</title>
 <link href="http://pnlybubbles.github.com/atom.xml" rel="self"/>
 <link href="http://pnlybubbles.github.com"/>
 <updated>2014-01-09T00:30:08+09:00</updated>
 <id>http://pnlybubbles.github.com</id>
 <author>
   <name>pnlybubbles</name>
   <email></email>
 </author>

 
 <entry>
   <title>アリス歌うよbotを作ったよ</title>
   <link href="http://pnlybubbles.github.com/ruby/2013-08-14/alice-utauyo-bot"/>
   <updated>2013-08-14T09:00:00+09:00</updated>
   <id>http://pnlybubbles.github.com/ruby/2013-08-14/alice-utauyo-bot</id>
   <content type="html">&lt;p&gt;きんいろモザイクのアリスちゃんかわいい。&lt;/p&gt;

&lt;p&gt;アリスbotを作りました。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://twitter.com/alice_utauyo&quot; title=&quot;アリス歌うよbot&quot;&gt;アリス歌うよbot&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;アニメ、きんいろモザイクの4話に出てくる「わたし、何もあげられるもの無いから歌を歌うよ！」というセリフをネタにして作りました。&lt;/p&gt;

&lt;p&gt;きんいろモザイクをしらない方へ、こちらが公式サイトです。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://www.kinmosa.com/&quot; title=&quot;ＴＶアニメ「きんいろモザイク」公式サイト&quot;&gt;ＴＶアニメ「きんいろモザイク」公式サイト&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;仕組みとしては、タイムラインからツイートを拾ってきて「名詞...動詞」の部分を抜き出して動詞を基本形に直してから「わたし、何もあげられるもの無いから○○よ！」にはめ込んでいます。&lt;/p&gt;

&lt;p&gt;ちなみにリフォローは手動です。&lt;/p&gt;

&lt;p&gt;純粋にこれだけしかしないbotというのもつまらないのでお遊びに変な機能突っ込もうかと考えています。&lt;/p&gt;

&lt;hr /&gt;

&lt;h4&gt;追記（2013/12/06）&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;採用したツイートをお気に入り登録します。（つまり元ネタはfavoriteを見ることで確認できます）&lt;/li&gt;
&lt;li&gt;採用されたけれどもお気に入り登録ができない（削除されている）ツイートは無視され、他のツイートを採用します。&lt;/li&gt;
&lt;li&gt;プライベートアカウントの場合は採用されません。&lt;/li&gt;
&lt;li&gt;リプライは採用されません。（リプライはmentionとなる@を含んだすべてのツイート）&lt;/li&gt;
&lt;li&gt;urlを含んで採用されることはありません。（urlの含むツイートのurl以外の部分を採用することはあります）&lt;/li&gt;
&lt;li&gt;ブラックリストに設定されている特定のviaによるツイートは採用されません。&lt;/li&gt;
&lt;li&gt;フォロー内/外かかわらず、リツイートを採用することはありません。&lt;/li&gt;
&lt;li&gt;係助詞の&quot;は&quot;、格助詞の&quot;が&quot;、記号、は採用されないはず。&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;BLACK_LIST = [&quot;アリス・カータレット&quot;, &quot;gohantabeyo.com&quot;, &quot;なるほどさるきちじゃねーの&quot;, &quot;占ぃったー&quot;, &quot;うんこはにがくてうまい&quot;, &quot;twittbot.net&quot;, &quot;JustUnfollow&quot;, &quot;SeesaaBlog&quot;, &quot;TweetMag1c for Android Pro&quot;, &quot;ツイ廃あらーと&quot;, &quot;BotMaker&quot;, &quot;makebot.sh&quot;, &quot;嫁コレiphone&quot;, &quot;ツイート数カウントくん&quot;, &quot;ホモォいじり&quot;, &quot;Intel Tweet City&quot;, &quot;The_AutoTweet&quot;, &quot;劣化コピー&quot;, &quot;Pochitter!（ぽちったー！）&quot;, &quot;EasyBotter&quot;, &quot;なるほどロリじゃねーの&quot;, &quot;twibow&quot;, &quot;twiroboJP&quot;, &quot;twimaker&quot;, &quot;チェンジワイパー☆∠(ﾟωﾟ)／&quot;, &quot;このまま眠りつづけて死ぬ&quot;, &quot;Quitter | 禁煙ったー&quot;, &quot;Dashbotv&quot;, &quot;今日のスタンド&quot;, &quot;ホモォいじり on iOS&quot;, &quot;3hikime_hitsuji&quot;, &quot;午前3時の茨城県&quot;, &quot;リプライ数チェッカ&quot;, &quot;すごいbotを作るサービス&quot;, &quot;いろつく結果画像投稿&quot;, &quot;このまま眠り続けて死ぬ&quot;, &quot;TweetMag1c for Android&quot;, &quot;TwitCasting&quot;, &quot;魔理沙ちゃん大陸&quot;, &quot;ポッキーﾑｼｬﾑｼｬ&quot;, &quot;makebot ツイッター便利機能／ボット作成サービス&quot;, &quot;twitterfeed&quot;, &quot;えへへ(^^)&quot;, &quot;精神の乱れ&quot;, &quot;このまま眠りつづけて死ぬ&quot;, &quot;垢消せ.com&quot;, &quot;rakubo2&quot;, &quot;livedoor Blog&quot;, &quot;イクシったー&quot;, &quot;このままもじゃりつづけてしぬ&quot;, &quot;ツイ助。&quot;, &quot;なるほどえたきちじゃねーの&quot;, &quot;なるほどコカインマンじゃねーの&quot;, &quot;autotweety.net&quot;, &quot;Ask.fm&quot;, &quot;ニコニコ動画&quot;, &quot;ニコニコ生放送&quot;, &quot;rekkacopy&quot;]&lt;/p&gt;

&lt;h2&gt;mecab-rubyが気持ち悪い&lt;/h2&gt;

&lt;p&gt;形態素解析は面白いですね。&lt;code&gt;MeCab&lt;/code&gt;を利用して行っています。&lt;/p&gt;

&lt;p&gt;わりと砕けた文章でも意外にうまく解析できたりして結構遊べます。&lt;/p&gt;

&lt;p&gt;このbotではRubyから扱う為に&lt;code&gt;mecab-ruby&lt;/code&gt;というgemを利用しているのですが、&lt;code&gt;parseToNode&lt;/code&gt;メソッドの戻り値の使い勝手が悪過ぎる気がしました。&lt;/p&gt;

&lt;p&gt;格納されているのはnodeオブジェクトで、解析した文章が単語ごとで区切られて入っています。&lt;code&gt;next&lt;/code&gt;メソッドで次の語を参照することができます。&lt;/p&gt;

&lt;p&gt;なぜイテレータが使えないのですか。&lt;/p&gt;

&lt;p&gt;Rubyなのに。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;While&lt;/code&gt;文を使うのは非常に気持ち悪かったので&lt;code&gt;MeCabModel&lt;/code&gt;というクラスを書いて&lt;code&gt;node&lt;/code&gt;の中身を扱いやすくプロパティも増やし、&lt;code&gt;Array&lt;/code&gt;に格納して吐き出すようにしました。&lt;/p&gt;

&lt;p&gt;それでも、まだ納得のいった拡張にはなっていませんが…。&lt;/p&gt;

&lt;p&gt;そんなこんなでアリス歌うよbotは生まれました。&lt;/p&gt;

&lt;p&gt;私は綾の方が好きですけどね。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>ruby-2.0.0-p195をrbenvでインストールしたメモ</title>
   <link href="http://pnlybubbles.github.com/ruby/2013-06-08/ruby-p195-installation"/>
   <updated>2013-06-08T06:10:00+09:00</updated>
   <id>http://pnlybubbles.github.com/ruby/2013-06-08/ruby-p195-installation</id>
   <content type="html">&lt;p&gt;Homebrewから必要なものをインストールする。&lt;/p&gt;

&lt;p&gt;その前にformulaを更新する&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[code]
$ brew update
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;openssl&lt;/code&gt;、&lt;code&gt;readline&lt;/code&gt;、&lt;code&gt;ruby-build&lt;/code&gt;をインストールする。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[code]
$ brew install openssl
$ brew install readline
$ brew install ruby-build
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;リンクする。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[code]
$ brew link readline openssl --force
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ruby2.0ではhomebrewから入れたopensslを使ってコンパイルするとsslの証明書エラーが起きる。対策のためにhomebrewから証明書を入れる。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[code]
$ brew install curl-ca-bundle
$ brew list curl-ca-bundle
/usr/local/Cellar/curl-ca-bundle/1.87/share/ca-bundle.crt
$ cp /usr/local/Cellar/curl-ca-bundle/1.87/share/ca-bundle.crt /usr/local/etc/openssl/cert.pem
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;準備が整ったのでrubyをインストールする。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[code]
$ RUBY_CONFIGURE_OPTS=&quot;--with-openssl-dir=`brew --prefix openssl` --with-readline-dir=`brew --prefix readline` --enable-shared&quot; rbenv install 2.0.0-p195
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;今回は&lt;code&gt;--enable-shared&lt;/code&gt;付きでインストールしているが、別に必要はない。RubyCocoaを使うときは必要。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;RUBY_CONFIGURE_OPTS&lt;/code&gt;でなくて&lt;code&gt;CONFIGURE_OPTS&lt;/code&gt;を使っているのをよく見るけど、私の環境ではうまくいきませんでした。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>JavaScriptでtimesっぽいことをしてみた</title>
   <link href="http://pnlybubbles.github.com/javascript/2013-04-20/javascript-times"/>
   <updated>2013-04-20T10:45:00+09:00</updated>
   <id>http://pnlybubbles.github.com/javascript/2013-04-20/javascript-times</id>
   <content type="html">&lt;p&gt;Rubyでは&lt;code&gt;times&lt;/code&gt;のような便利なイテレータが揃っています。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[code.high.num]
5.times { |i|
    print i
}

# =&amp;gt; 01234
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;JavaSciptでもTimesがしたい&lt;/h2&gt;

&lt;p&gt;そこで空のArrayを作ってそれをeachするという方法を思いつきました。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;new Array(n)&lt;/code&gt;ではn個の&lt;code&gt;undefined&lt;/code&gt;の入った配列を作ることができます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[code.high.num]
new Array(3);

// =&amp;gt; [undefined, undefined, undefined]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;JavaScriptでのeachはこちらの記事でまとめてあります。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://pnlybubbles.github.io/javascript/2013-02-15/javascript-jquery-each/&quot; title=&quot;JavaSriptでeachしてみた｜あわあわのブログ&quot;&gt;JavaSriptでeachしてみた｜あわあわのブログ&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;それでは、timesのようなこを試してみます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[code.high.num]
(new Array(5)).forEach(function(v, i) {
    console.log(i);
});

// =&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;一回もeachせず...&lt;/p&gt;

&lt;p&gt;&lt;code&gt;undefined&lt;/code&gt;の配列要素は&lt;code&gt;forEach&lt;/code&gt;しないようです。&lt;/p&gt;

&lt;h2&gt;jQueryを使ってみる&lt;/h2&gt;

&lt;p&gt;jQueryの&lt;code&gt;each&lt;/code&gt;を使ってみると、&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[code.high.num]
$.each((new Array(5)), function(i) {
    console.log(i);
});

// =&amp;gt; 0
// =&amp;gt; 1
// =&amp;gt; 2
// =&amp;gt; 3
// =&amp;gt; 4
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これでちゃんと動きました。&lt;/p&gt;

&lt;p&gt;こんなかんじで&lt;code&gt;times&lt;/code&gt;っぽいものが書けました。&lt;/p&gt;

&lt;h2&gt;forは使わないの？&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;[code.high.num]
for(var i = 0; i &amp;lt; 5; i++) {
    console.log(i);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;たしかにこれでも動きます。&lt;code&gt;break;&lt;/code&gt;も使えて便利かもしれません。&lt;/p&gt;

&lt;p&gt;しかし、JavaScriptのスレッドが発生した時、変数&lt;code&gt;i&lt;/code&gt;が書き換わり予期しない繰り返し回数になってしまうことがあります。&lt;/p&gt;

&lt;p&gt;JavaScriptにおいてスレッドが発生する時は&lt;code&gt;event&lt;/code&gt;と&lt;code&gt;setTimeout&lt;/code&gt;です。&lt;/p&gt;

&lt;p&gt;このような場面でイテレータ内の操作に多少の遅延などがあった場合、&lt;code&gt;for&lt;/code&gt;の処理中に&lt;code&gt;for&lt;/code&gt;が行われてしまい、変数&lt;code&gt;i&lt;/code&gt;が書き換わってしまいます。&lt;/p&gt;

&lt;p&gt;予期しないバグが発生するかもしれません。&lt;/p&gt;

&lt;p&gt;それと、私は&lt;code&gt;times&lt;/code&gt;っぽく書きたいのでやっぱり&lt;code&gt;for&lt;/code&gt;はなしですね。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>TwitterAPI POST Rate Limit</title>
   <link href="http://pnlybubbles.github.com/twitter/2013-04-06/twitterapi_post_rate_limit"/>
   <updated>2013-04-06T00:30:00+09:00</updated>
   <id>http://pnlybubbles.github.com/twitter/2013-04-06/twitterapi_post_rate_limit</id>
   <content type="html">&lt;p&gt;This article is NOT official.&lt;/p&gt;

&lt;h2&gt;API&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;POST statuses/update&lt;/li&gt;
&lt;li&gt;POST statuses/update_with_media&lt;/li&gt;
&lt;li&gt;POST statuses/retweet/:id&lt;/li&gt;
&lt;li&gt;POST statuses/destroy/:id&lt;/li&gt;
&lt;/ul&gt;


&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://dev.twitter.com/docs/api/1.1&quot; title=&quot;REST API v1.1 Resources   Twitter Developers&quot;&gt;REST API v1.1 Resources   Twitter Developers&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;h2&gt;Rate Limiting&lt;/h2&gt;

&lt;p&gt;The rate limiting for calls to these API depends on all conditions below.&lt;/p&gt;

&lt;h3&gt;Duplication&lt;/h3&gt;

&lt;p&gt;Those that duplicated with recent posts(about 20) will be regulated.&lt;br/&gt;
POST statuses/update API only.&lt;/p&gt;

&lt;h3&gt;127req/3hours&lt;/h3&gt;

&lt;p&gt;It simply is not &quot;per three hours&quot;.&lt;br/&gt;
We define &quot;one Section&quot; as for 3 hours.&lt;br/&gt;
We post something, then the &quot;Section&quot; is start. (If the section has not started.)&lt;br/&gt;
Between the &quot;Section&quot;, we can request 127 APIs.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/2013-04-05-twitterapi_post_rate_limit.png&quot; /&gt;&lt;/p&gt;

&lt;h3&gt;1000req/day&lt;/h3&gt;

&lt;p&gt;&quot;Twitter Developer Official&quot; announces this rate limiting.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://support.twitter.com/articles/15364-twitter-limits-api-updates-and-following&quot; title=&quot;Twitter Help Center   Twitter limits (API, updates, and following)&quot;&gt;Twitter Help Center   Twitter limits (API, updates, and following)&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;However, According to the rate limti above this (127req/3hours), the calculated rate limit is 1016req/day (127 * 8).&lt;/p&gt;

&lt;h2&gt;Others&lt;/h2&gt;

&lt;p&gt;The client &quot;Mobile Web&quot;, &quot;Keitai Web&quot;, &quot;HootSuite&quot; had a whitelist API and These could request 20000req/hour, but it was regulated on March 2012.&lt;/p&gt;

&lt;p&gt;GET Rate Limiting is here.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://dev.twitter.com/docs/rate-limiting/1.1/limits&quot; title=&quot;REST API v1.1 Limits per window by resource   Twitter Developers&quot;&gt;REST API v1.1 Limits per window by resource   Twitter Developers&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;cf.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://ltzz.info/alpha/twitter_kisei.html&quot; title=&quot;投稿規制の仕様&quot;&gt;http://ltzz.info/alpha/twitter_kisei.html&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
</content>
 </entry>
 
 <entry>
   <title>JavaScriptでイベントによるスクロールを無効化する</title>
   <link href="http://pnlybubbles.github.com/javascript/2013-03-18/Disable-scroll-from-event"/>
   <updated>2013-03-18T12:30:00+09:00</updated>
   <id>http://pnlybubbles.github.com/javascript/2013-03-18/Disable-scroll-from-event</id>
   <content type="html">&lt;p&gt;今回は備忘録です。&lt;/p&gt;

&lt;p&gt;例のTwitterのクライアント開発の途中です。&lt;/p&gt;

&lt;p&gt;タイムラインを実装中、キーボードで項目を操作できるようにしたのですが、キーボードの上下入力によってスクロールされてしまい都合よく動作してくれませんでした。&lt;/p&gt;

&lt;p&gt;そこで探してみると、こんな記事を発見。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://phpspot.org/blog/archives/2006/08/javascript_23.html&quot; title=&quot;JavaScriptでマウスホイールイベントを扱い、スクロールも停止する方法 phpspot開発日誌&quot;&gt;JavaScriptでマウスホイールイベントを扱い、スクロールも停止する方法 phpspot開発日誌&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;この記事ではマウスホイールによるスクロールを無効化しています。&lt;/p&gt;

&lt;p&gt;そこでこれをキーボードのイベントに。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[code.high.num]
$(window).keydown(function(event) {
    if (event.preventDefault) {
        event.preventDefault();
    }
    event.returnValue = false;
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;jQueryで&lt;code&gt;onkeydown&lt;/code&gt;イベントを動的に追加しています。&lt;/p&gt;

&lt;p&gt;キーワードとなってるのがこの&lt;code&gt;preventDefault&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;（&lt;code&gt;returnValue&lt;/code&gt;はIE用です。今回IEは関係ないので取っちゃいます。）&lt;/p&gt;

&lt;p&gt;調べてるとこんなこんなメソッドがあったとは・・・。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://api.jquery.com/event.preventDefault/&quot; title=&quot;event.preventDefault() jQuery API Documentation&quot;&gt;event.preventDefault() jQuery API Documentation&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Description: If this method is called, the default action of the event will not be triggered.&lt;/p&gt;

&lt;p&gt;このメソッドが呼ばれた時、デフォルトのアクションは実行されません。&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;上の&lt;code&gt;api.jQuery.com&lt;/code&gt;での例では、リンクをクリックしたらページ移動が起こるところ、それをキャンセルさせて、動的に追加したメソッドを実行しているという感じです。&lt;/p&gt;

&lt;p&gt;スクロールの動作もブラウザのデフォルトのアクションとしてjavascriptから抑制できるみたいですね。&lt;/p&gt;

&lt;p&gt;他にも調べてみると、こんなものが。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://api.jquery.com/event.stopPropagation/&quot; title=&quot;event.stopPropagation() jQuery API Documentation&quot;&gt;event.stopPropagation() jQuery API Documentation&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Description: Prevents the event from bubbling up the DOM tree, preventing any parent handlers from being notified of the event.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;*イベント伝播* という概念があって、DOMの階層の順番にイベントが発生してアクションが起こるフローのことをいいます。&lt;/p&gt;

&lt;p&gt;このメソッドはそのフローを途中で止めてそれ以上実行されないようにするメソッドのようです。&lt;/p&gt;

&lt;p&gt;調べるときりがないですね・・・。&lt;/p&gt;

&lt;p&gt;とりあえず、これで意図しないスクロールはなくなりました。めでたし。&lt;/p&gt;

&lt;p&gt;それと、なぜか&lt;code&gt;$(window).keypress&lt;/code&gt;でkeycodeが取れませんでした。なんでだろう。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>TwiAdn - TwitterとApp.netに同時投稿するDashboardWidget</title>
   <link href="http://pnlybubbles.github.com/javascript/2013-03-16/TwiAdn"/>
   <updated>2013-03-16T14:30:00+09:00</updated>
   <id>http://pnlybubbles.github.com/javascript/2013-03-16/TwiAdn</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/img/2013-03-16-TwiAdn1.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;App.net と Twitter に同時できるDashboardクライアントが欲しかったので作りました。&lt;/p&gt;

&lt;p&gt;Twitterについては普通にAPIから&lt;code&gt;oauth_token&lt;/code&gt;をリクエストすれば良いのですが、App.netについては私はDeveloperとして登録していないのでAPIが使えません。正しくは&lt;code&gt;oauth_token&lt;/code&gt;をリクエストすることができません。&lt;/p&gt;

&lt;p&gt;なので今回はMac対応のCommand line toolである&lt;code&gt;brio&lt;/code&gt;を利用して&lt;code&gt;oauth_token&lt;/code&gt;を取得する方法を使っています。&lt;/p&gt;

&lt;p&gt;ですので、ポストされたつぶやきは&lt;code&gt;via brio&lt;/code&gt;となっています。&lt;/p&gt;

&lt;p&gt;なお、Twitterのみでの利用も可能です。&lt;/p&gt;

&lt;h2&gt;利用方法&lt;/h2&gt;

&lt;p&gt;APIを叩くためにRubyを使用しています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;oauth gem&lt;/li&gt;
&lt;li&gt;twitter gem&lt;/li&gt;
&lt;li&gt;adn gem&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;なお&lt;code&gt;oauth gem&lt;/code&gt;は&lt;code&gt;/usr/bin/gem&lt;/code&gt;からインストールする必要があります。&lt;/p&gt;

&lt;p&gt;初期のTwitterの認証を終えたあとは、Dashboardの裏面からRubyのパスの指定が必要です。Rubyは&lt;code&gt;1.9.3&lt;/code&gt;以上である必要があります。&lt;/p&gt;

&lt;p&gt;MacOS 10.4.3 以上&lt;/p&gt;

&lt;p&gt;TwiAdn.wdgt.zip
&lt;a class=&quot;btn&quot; href=&quot;http://cl.ly/NcGq/download/TwiAdn.wdgt.zip&quot;&gt;Download&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h4&gt;追記（2013/03/16）&lt;/h4&gt;

&lt;p&gt;インストーラーを作りました。&lt;/p&gt;

&lt;p&gt;Ruby1.9.3以上がインストールされていることが前提です。&lt;/p&gt;

&lt;p&gt;インストーラーアプリケーションを実行するとダイアログが表示され、gemのパスの入力を求められます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ which gem
/Users/pnlybubbles/.rbenv/shims/gem
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;で調べることができますので、それをダイアログのフィールドに入力して下さい。&lt;/p&gt;

&lt;p&gt;TwiAdn Requirement Installer.app.zip
&lt;a class=&quot;btn&quot; href=&quot;http://cl.ly/NdO7/download/TwiAdn%20Requirement%20Installer.app.zip&quot;&gt;Download&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;機能&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;TwitterとApp.netに同時投稿。&lt;/li&gt;
&lt;li&gt;Twitterだけ、またはApp.netだけという選択も簡単に変更可能。&lt;/li&gt;
&lt;li&gt;Returnキーによる投稿が可能。&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;スクリーンショット&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/img/2013-03-16-TwiAdn1.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/2013-03-16-TwiAdn2.png&quot; /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>MacRubyでTwitterクライアント</title>
   <link href="http://pnlybubbles.github.com/ruby/2013-03-09/develop-luminous-1"/>
   <updated>2013-03-09T17:30:00+09:00</updated>
   <id>http://pnlybubbles.github.com/ruby/2013-03-09/develop-luminous-1</id>
   <content type="html">&lt;p&gt;新しくMacRubyベースのTwitterクライアント開発始めました。&lt;/p&gt;

&lt;p&gt;（実は2回目…。）&lt;/p&gt;

&lt;h2&gt;構想&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/img/2013-03-09-Luminous-chart1.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;iPhoneでもこんなに綺麗な図が描ける。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>google-code-prettifyを適用してみた</title>
   <link href="http://pnlybubbles.github.com/javascript/2013-02-16/google-code-prettify-try-using"/>
   <updated>2013-02-16T11:30:00+09:00</updated>
   <id>http://pnlybubbles.github.com/javascript/2013-02-16/google-code-prettify-try-using</id>
   <content type="html">&lt;p&gt;ブログのコードの埋め込みをきれいにしようと思い、&lt;code&gt;google-code-prettify&lt;/code&gt;をいれてみました。&lt;/p&gt;

&lt;p&gt;美しい…。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[code.high.num]
class Person
    include ActiveModel::Conversion
    include ActiveModel::Validations

    validations_presence_of :name

    attr_accessor :name

    def initialize(attributes = {})
        @name = attributes[:name]
    end

    def persist
        @persisted = true
    end

    def persisted?
        @persisted
    end
end

person1 = Person.new(:name =&amp;gt; &quot;matz&quot;)
p person1.valid?
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;テーマは&lt;code&gt;Tomorrow&lt;/code&gt;です。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Pygments&lt;/code&gt;のSyntax Highlightingも&lt;code&gt;Jekyll&lt;/code&gt;の方で使えるようになっています。&lt;code&gt;Pygments&lt;/code&gt;の場合はこんな感じ。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Person&lt;/span&gt;
    &lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;ActiveModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:Conversion&lt;/span&gt;
    &lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;ActiveModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:Validations&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;validations_presence_of&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt;

    &lt;span class=&quot;kp&quot;&gt;attr_accessor&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attributes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{})&lt;/span&gt;
        &lt;span class=&quot;vi&quot;&gt;@name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;attributes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;persist&lt;/span&gt;
        &lt;span class=&quot;vi&quot;&gt;@persisted&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;persisted?&lt;/span&gt;
        &lt;span class=&quot;vi&quot;&gt;@persisted&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;person1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;matz&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;person1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;valid?&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;すこし違います。テーマは同じ&lt;code&gt;Tomorrow&lt;/code&gt;です。すこし詳細になった感じ。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;google-code-prettify&lt;/code&gt;でただ単に全部のコードにシンタックスハイライトを適用するのではなく、マジックコメント(?)のようなものを使ってライン番号だけ表示させたり、ハイライトだけさせたりできるようにしました。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;JavaScript&lt;/code&gt;と&lt;code&gt;jQuery&lt;/code&gt;を使ってクラスを書き換えたり、要素を消したりして適用させているのでちょっと無理やり感あります…。&lt;/p&gt;

&lt;p&gt;コードもぐちゃぐちゃ。&lt;br/&gt;
見たい人はソースコード覗いてください。&lt;/p&gt;

&lt;p&gt;でも、やっぱりTomorrowは綺麗。汚いコードも（ハイライトだけ）美しく…。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>JavaSriptでeachしてみた</title>
   <link href="http://pnlybubbles.github.com/javascript/2013-02-16/javascript-jquery-each"/>
   <updated>2013-02-16T06:00:00+09:00</updated>
   <id>http://pnlybubbles.github.com/javascript/2013-02-16/javascript-jquery-each</id>
   <content type="html">&lt;p&gt;最近ずっと&lt;code&gt;Ruby&lt;/code&gt;を書いていて、久しぶりに&lt;code&gt;JavaScript&lt;/code&gt;を書くとまず&lt;code&gt;;&lt;/code&gt;を忘れる。&lt;/p&gt;

&lt;p&gt;今回はこんなことをしてて焦った。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[code.high.num]
var arr = new Array();

arr = [&quot;ruby&quot;, &quot;perl&quot;, &quot;javascript&quot;, &quot;jquery&quot;];

arr.each(function(value) {
    console.log(value);
});

// Uncaught TypeError: Object ruby,perl,javascript,jquery has no method 'each'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;for&lt;/code&gt;で書けるけど、Rubyになれると&lt;code&gt;for&lt;/code&gt;を使うのに気が進まない…。いつの間にか…。&lt;/p&gt;

&lt;p&gt;調べてみると&lt;code&gt;jQuery&lt;/code&gt;をrequireじゃなくて…&lt;code&gt;src&lt;/code&gt;すると&lt;code&gt;each&lt;/code&gt;が使えるみたい。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[code.high.num]
var arr = new Array();

arr = [&quot;ruby&quot;, &quot;perl&quot;, &quot;javascript&quot;, &quot;jquery&quot;];

$.each(arr, function(index, value) {
    console.log(index + &quot;:&quot; + value);
});

// 0:ruby
// 1:perl
// 2:javascript
// 3:jquery 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;あとjQueryに&lt;code&gt;strip&lt;/code&gt;的なのがあったからメモ。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[code.high.num]
var str = &quot; \nRuby \n\t&quot;;
str.trim(); // =&amp;gt; &quot;Ruby&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;JavaScriptはRubyとまた違ったオブジェクト指向でやりやすかったり、やりにくかったり。プロトタイプとかがまたややこしいと思ったり。オブジェクト作るのがめんどくさかったり。&lt;/p&gt;

&lt;p&gt;たりたり。&lt;/p&gt;

&lt;hr /&gt;

&lt;h4&gt;追記（2013/03/19）&lt;/h4&gt;

&lt;p&gt;それ、&lt;code&gt;forEach&lt;/code&gt;メソッドでできるよ。（というか断然こっちのほうが良い・・・）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[code.num.high]
var arr = [&quot;ruby&quot;, &quot;perl&quot;, &quot;javascript&quot;, &quot;jquery&quot;];

arr.forEach(function(value, index) {
    console.log(index + &quot;:&quot; + value);
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;というかこっちのほうがRubyに近いですね。&lt;/p&gt;

&lt;p&gt;jQueryと違ってvalueとindexが逆になっているので注意です。また、&lt;code&gt;forEach&lt;/code&gt;は&lt;code&gt;Array&lt;/code&gt;のインスタンスですのでオブジェクトには使えません。オブジェクトのときはjQueryを使うか、&lt;code&gt;for each…in&lt;/code&gt;文を使いましょう。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[code.num.high]
for each (var value in obj) {
    value.method(value.key);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Chromeは未実装なのか動きません。&lt;code&gt;for each…in&lt;/code&gt;文は&lt;code&gt;javascript1.8&lt;/code&gt;からです。&lt;/p&gt;

&lt;p&gt;他にも&lt;code&gt;Object&lt;/code&gt;のプロトタイプをいじるという手もありそうですが、それはあまり良くないでのしたくないですね…。&lt;/p&gt;

&lt;p&gt;オブジェクトの場合は素直にjQuery使ったほうが良さそうです。&lt;/p&gt;

&lt;p&gt;また、&lt;code&gt;forEach&lt;/code&gt;はこんな引数も持ちます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[code.num.high]
arr.forEach(function(value, index) {
    this.method(index, value);
}, obj)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;こんな感じで&lt;code&gt;forEach&lt;/code&gt;文のなかで参照できるオブジェクトを指定することが可能。未指定の場合は&lt;code&gt;undefined&lt;/code&gt;です。&lt;/p&gt;

&lt;p&gt;コンストラクタ内で使うときは&lt;code&gt;this&lt;/code&gt;の指すものが変わると厄介なので&lt;code&gt;obj&lt;/code&gt;に&lt;code&gt;this&lt;/code&gt;を指定してあげれば全く問題ないですね。&lt;/p&gt;

&lt;p&gt;ちなみにjQueryの&lt;code&gt;each&lt;/code&gt;での&lt;code&gt;this&lt;/code&gt;では、インスタンスから&lt;code&gt;each&lt;/code&gt;で参照されたものを*オブジェクト*として返します。（インスタンスって言っていいのかな...）&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://api.jquery.com/jQuery.each/&quot; title=&quot;jQuery.each() jQuery API Documentation&quot;&gt;jQuery.each() jQuery API Documentation&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The value can also be accessed through the this keyword, but Javascript will always wrap the this value as an Object even if it is a simple string or number value.&lt;/p&gt;&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;[code.num.high]
var arr = [&quot;ruby&quot;, &quot;perl&quot;, &quot;javascript&quot;, &quot;jquery&quot;];

$.each(arr, function() {
    console.log(this);
});

// String {1: &quot;r&quot;, 2: &quot;u&quot;, 3: &quot;b&quot;, 4: &quot;y&quot;}
// String {1: &quot;p&quot;, 2: &quot;e&quot;, 3: &quot;r&quot;, 4: &quot;l&quot;}
// ...
&lt;/code&gt;&lt;/pre&gt;
</content>
 </entry>
 
 <entry>
   <title>ruby-2.0.0-rc2をrbenvでインストールしたメモ</title>
   <link href="http://pnlybubbles.github.com/ruby/2013-02-14/ruby-2.0.0-rc2-install-memo"/>
   <updated>2013-02-14T13:00:00+09:00</updated>
   <id>http://pnlybubbles.github.com/ruby/2013-02-14/ruby-2.0.0-rc2-install-memo</id>
   <content type="html">&lt;p&gt;とりあえず最初はコケる。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ rbenv install 2.0.0-rc2
Downloading openssl-1.0.1c.tar.gz...
-&amp;gt; https://www.openssl.org/source/openssl-1.0.1c.tar.gz
Installing openssl-1.0.1c...

BUILD FAILED

Inspect or clean up the working tree at /var/folders/v_/pd9jfc0d0l9cblq8fdlxrkqr0000gn/T/ruby-build.20130214032527.51196
Results logged to /var/folders/v_/pd9jfc0d0l9cblq8fdlxrkqr0000gn/T/ruby-build.20130214032527.51196.log

Last 10 log lines:
x openssl-1.0.1c/VMS/TODO
x openssl-1.0.1c/VMS/ucx_shr_decc_log.opt
x openssl-1.0.1c/VMS/ucx_shr_decc.opt
x openssl-1.0.1c/VMS/ucx_shr_vaxc.opt
x openssl-1.0.1c/VMS/VMSify-conf.pl
x openssl-1.0.1c/VMS/WISHLIST.TXT
/var/folders/v_/pd9jfc0d0l9cblq8fdlxrkqr0000gn/T/ruby-build.20130214032527.51196/openssl-1.0.1c /var/folders/v_/pd9jfc0d0l9cblq8fdlxrkqr0000gn/T/ruby-build.20130214032527.51196 /usr/local/Cellar/openssl/1.0.1e
Operating system: i686-apple-darwinDarwin Kernel Version 11.4.0: Mon Apr 9 19:32:15 PDT 2012; root:xnu-1699.26.8~1/RELEASE_X86_64
Configuring for darwin64-x86_64-cc
Usage: Configure [no-&amp;lt;cipher&amp;gt; ...] [enable-&amp;lt;cipher&amp;gt; ...] [experimental-&amp;lt;cipher&amp;gt; ...] [-Dxxx] [-lxxx] [-Lxxx] [-fxxx] [-Kxxx] [no-hw-xxx|no-hw] [[no-]threads] [[no-]shared] [[no-]zlib|zlib-dynamic] [no-asm] [no-dso] [no-krb5] [sctp] [386] [--prefix=DIR] [--openssldir=OPENSSLDIR] [--with-xxx[=vvv]] [--test-sanity] os/compiler[:flags]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;openssl&lt;/code&gt;を指定してあげると&lt;code&gt;openssl&lt;/code&gt;のコンパイルを回避できるみたい。&lt;/p&gt;

&lt;p&gt;ここを参考にオプションを指定してみる。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://ikm.hatenablog.jp/entry/2013/02/13/040433&quot; title=&quot;ruby-2.0.0-rc2を入れた（サクッと） - There's an echo in my head&quot;&gt;ruby-2.0.0-rc2を入れた（サクッと） - There's an echo in my head&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;だけどそのままやったらまたコケた。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ RUBY_CONFIGURE_OPTS=&quot;--with-openssl-dir=`brew --prefix openssl` --with-readline-dir=`brew --prefix readline`&quot; rbenv install 2.0.0-rc2
Downloading openssl-1.0.1c.tar.gz...
-&amp;gt; https://www.openssl.org/source/openssl-1.0.1c.tar.gz
Installing openssl-1.0.1c...

BUILD FAILED
...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;ruby-build&lt;/code&gt;のバージョンが違うみたい。記事の中の引用されたTwitterの中のリンクの&lt;code&gt;ruby-build&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Homebrew&lt;/code&gt;からアップグレードしてあげる。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew upgrade --HEAD ruby-build
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;--HEAD&lt;/code&gt;オプション初めて知った…。&lt;/p&gt;

&lt;p&gt;もう一回。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ RUBY_CONFIGURE_OPTS=&quot;--with-openssl-dir=`brew --prefix openssl` --with-readline-dir=`brew --prefix readline`&quot; rbenv install 2.0.0-rc2
Downloading ruby-2.0.0-rc2.tar.gz...
-&amp;gt; http://ftp.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-rc2.tar.gz
Installing ruby-2.0.0-rc2...

BUILD FAILED

Inspect or clean up the working tree at /var/folders/v_/pd9jfc0d0l9cblq8fdlxrkqr0000gn/T/ruby-build.20130214035828.80600
Results logged to /var/folders/v_/pd9jfc0d0l9cblq8fdlxrkqr0000gn/T/ruby-build.20130214035828.80600.log

Last 10 log lines:
installing default gems:      /Users/pnlybubbles/.rbenv/versions/2.0.0-rc2/lib/ruby/gems/2.0.0 (build_info, cache, doc, gems, specifications)
                              bigdecimal 1.1.0
                              io-console 0.4.1
                              json 1.7.5
                              minitest 4.3.2
                              psych 2.0.0
                              rake 0.9.6
                              rdoc 4.0.0.rc.2.1
                              test-unit 2.0.0.0
The Ruby openssl extension was not compiled. Missing the OpenSSL lib?
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;あれ、インストールできたのかな。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ rbenv versions
  ...
  2.0.0-rc2
  ...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;入ってる。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ rbenv global 2.0.0-rc2
$ ruby -v
ruby 2.0.0dev (2013-02-08 trunk 39161) [i386-darwin11.4.0]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;一応、インストールはできたみたい。（あれ、アーキテクチャが…）&lt;/p&gt;

&lt;p&gt;いったんここまで。&lt;/p&gt;

&lt;p&gt;あと、コンパイラをいろいろいじっていたのでちょっとこんがらがった…。&lt;/p&gt;

&lt;p&gt;コンパイラの指定は&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ export CC=/usr/bin/gcc
&lt;/code&gt;&lt;/pre&gt;
</content>
 </entry>
 
 <entry>
   <title>Lionでruby-1.9.1-p378のインストールのメモ</title>
   <link href="http://pnlybubbles.github.com/ruby/2013-02-14/ruby-1.9.1-p378-install-memo"/>
   <updated>2013-02-14T06:00:00+09:00</updated>
   <id>http://pnlybubbles.github.com/ruby/2013-02-14/ruby-1.9.1-p378-install-memo</id>
   <content type="html">&lt;p&gt;Xcode4.3ではgccが&lt;code&gt;llvm-gcc&lt;/code&gt;というllvmとgccの間みたいなコンパイラらしい。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;llvm&lt;/code&gt;のほうがエラーがわかりやすく、速いみたいでAppleはgccからllvmに移行しつつあるとのこと。&lt;/p&gt;

&lt;p&gt;Homebrewから&lt;code&gt;gcc&lt;/code&gt;をインストールして、コンパイラを指定してrubyをビルドする。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ brew install https://raw.github.com/Homebrew/homebrew-dupes/master/gcc.rb --enable-all-languages --use-llvm
$ export CC=/usr/local/bin/gcc-4.7
$ CONFIGURE_OPTS=&quot;--with-readline-dir=/usr/local --with-openssl-dir=/usr/local&quot;
$ rbenv install 1.9.1-p378
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;アーキテクチャを指定してビルドする場合は&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ export CONFIGURE_OPTS=&quot;--with-arch=i386&quot;
&lt;/code&gt;&lt;/pre&gt;
</content>
 </entry>
 
 <entry>
   <title>Ruby2.0のキーワード引数を試してみた</title>
   <link href="http://pnlybubbles.github.com/ruby/2013-02-12/keyword-argument-test"/>
   <updated>2013-02-12T23:30:00+09:00</updated>
   <id>http://pnlybubbles.github.com/ruby/2013-02-12/keyword-argument-test</id>
   <content type="html">&lt;p&gt;Ruby2.0rcの気になった新機能、キーワード引数を試してみた。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ruby -v
ruby 2.0.0dev (2013-02-08 trunk 39161) [x86_64-darwin11.4.0]
&lt;/code&gt;&lt;/pre&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;akarin&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;kawaii&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# =&amp;gt; [&amp;quot;akarin&amp;quot;, &amp;quot;kawaii&amp;quot;]&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;haruka&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;kosikosi&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# =&amp;gt; [&amp;quot;haruka&amp;quot;, &amp;quot;kosikosi&amp;quot;]&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;kosikosi&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;haruka&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# =&amp;gt; [&amp;quot;haruka&amp;quot;, &amp;quot;kosikosi&amp;quot;]&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;haruka&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# =&amp;gt; [&amp;quot;haruka&amp;quot;, &amp;quot;kawaii&amp;quot;]&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;kosikosi&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# =&amp;gt; [&amp;quot;akarin&amp;quot;, &amp;quot;kosikosi&amp;quot;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;引数にキーを指定することができる。&lt;/p&gt;

&lt;p&gt;メソッドを呼ぶときに引数を入れないと指定したデフォルト値が使われる。&lt;/p&gt;

&lt;p&gt;便利。これ使えば&lt;code&gt;argument error&lt;/code&gt;も減りそう。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>bowlineをインストールしてみた</title>
   <link href="http://pnlybubbles.github.com/ruby/2013-02-12/bowline-try-using"/>
   <updated>2013-02-12T23:00:00+09:00</updated>
   <id>http://pnlybubbles.github.com/ruby/2013-02-12/bowline-try-using</id>
   <content type="html">&lt;p&gt;html+javascript+css+rubyでGUIアプリケーションを開発可能にするプロジェクト、bowlineを使ってみた。&lt;/p&gt;

&lt;p&gt;今のところUbuntuとMacOSXに対応しているようです。&lt;/p&gt;

&lt;h2&gt;インストール&lt;/h2&gt;

&lt;p&gt;いちおうRubyのバージョン。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ruby -v
ruby 1.9.3p327 (2012-11-10 revision 37606) [x86_64-darwin11.4.0]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;Homebrew&lt;/code&gt;で管理してるので最新版ではないです。&lt;/p&gt;

&lt;p&gt;さて、&lt;code&gt;bowline&lt;/code&gt;インストールしてみる。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo gem install bowline
ERROR:  While executing gem ... (Gem::DependencyError)
    Unable to resolve dependencies: activemodel requires i18n (~&amp;gt; 0.5.0)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これだとエラーがでる。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;i18n&lt;/code&gt;がgemでバージョン指定されているのかな。&lt;/p&gt;

&lt;p&gt;gemインストール時にバージョンを指定してあげる。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ gem install i18n --version 0.5.0
Fetching: i18n-0.5.0.gem (100%)
Successfully installed i18n-0.5.0
1 gem installed
Installing ri documentation for i18n-0.5.0...
Installing RDoc documentation for i18n-0.5.0...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;もう一度&lt;code&gt;bowline&lt;/code&gt;のインストールを試してみる。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo gem install bowline
Fetching: highline-1.6.15.gem (100%)
Fetching: diff-lcs-1.2.1.gem (100%)
Fetching: extlib-0.9.16.gem (100%)
...
DEPRECATED! DEPRECATED! DEPRECATED! DEPRECATED! DEPRECATED! DEPRECATED!
DEPRECATED! DEPRECATED! DEPRECATED! DEPRECATED! DEPRECATED! DEPRECATED!

  The rubyzip2 gem is deprecated. Instead, please use:

  * rubyzip       https://github.com/aussiegeek/rubyzip
  * archive-zip   https://github.com/javanthropus/archive-zip

DEPRECATED! DEPRECATED! DEPRECATED! DEPRECATED! DEPRECATED! DEPRECATED!
DEPRECATED! DEPRECATED! DEPRECATED! DEPRECATED! DEPRECATED! DEPRECATED!
...
Fetching: bowline-0.9.4.gem (100%)
...
    **************************************************

      Thank you for installing Bowline.

      If you're on Linux, please install the WebKit library:
        sudo apt-get install libwebkit-dev

    **************************************************
...
Successfully installed bowline-0.9.4
...
Installing RDoc documentation for bowline-0.9.4...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;なんかいろいろ出たけど、どうにかインストールはできたみたい。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;DEPRECATED!&lt;/code&gt;うるさし...&lt;/p&gt;

&lt;p&gt;Linuxの場合は&lt;code&gt;libwebkit-dev&lt;/code&gt;をインストールしてくださねーって言ってる。&lt;/p&gt;

&lt;p&gt;これでインストールは完了。&lt;/p&gt;

&lt;h2&gt;サンプルを作ってみる&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;bowline-gen&lt;/code&gt;というコマンドで&lt;code&gt;helloworld&lt;/code&gt;を作る。パスは適当に通しておく。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ bowline-gen app helloworld
Generating with app generator:
     [ADDED]  vendor
     [ADDED]  lib
     [ADDED]  db
     [ADDED]  build
     [ADDED]  log
     [ADDED]  public
     [ADDED]  app
     [ADDED]  app/models
     [ADDED]  app/binders
     [ADDED]  app/helpers
     [ADDED]  app/windows
     [ADDED]  config
     [ADDED]  config/initializers
     [ADDED]  config/first_run
     [ADDED]  app_first_run
     [ADDED]  Rakefile
     [ADDED]  Gemfile
     [ADDED]  public/index.html
     [ADDED]  public/javascripts/application.js
     [ADDED]  public/stylesheets/application.css
     [ADDED]  script/build
     [ADDED]  script/console
     [ADDED]  script/generate
     [ADDED]  script/init
     [ADDED]  script/run
     [ADDED]  config/environment.rb
     [ADDED]  config/environments/development.rb
     [ADDED]  config/environments/production.rb
     [ADDED]  .gitignore
     [ADDED]  public/icon.png
     [ADDED]  script
     [ADDED]  public/javascripts/jquery.js
     [ADDED]  public/javascripts/jquery.chain.js
     [ADDED]  public/javascripts/superclass.js
     [ADDED]  public/javascripts/bowline.js
     [ADDED]  public/javascripts/bowline.chain.js
     [ADDED]  app/windows/main_window.rb
     [ADDED]  config/application.yml
     [ADDED]  config/database.yml
     [ADDED]  config/boot.rb
     [ADDED]  README
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;helloworld&lt;/code&gt;ディレクトリに入って&lt;code&gt;bowline-bundle&lt;/code&gt;を実行する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ bowline-bundle
/usr/local/Cellar/ruby/1.9.3-p327/lib/ruby/gems/1.9.1/gems/bowline-bundler-0.0.4/lib/bowline/bundler/dependency.rb:59:in `&amp;lt;class:Dependency&amp;gt;': undefined method `version_requirements' for class `Bundler::Dependency' (NameError)
    from /usr/local/Cellar/ruby/1.9.3-p327/lib/ruby/gems/1.9.1/gems/bowline-bundler-0.0.4/lib/bowline/bundler/dependency.rb:4:in `&amp;lt;module:Bundler&amp;gt;'
    from /usr/local/Cellar/ruby/1.9.3-p327/lib/ruby/gems/1.9.1/gems/bowline-bundler-0.0.4/lib/bowline/bundler/dependency.rb:1:in `&amp;lt;top (required)&amp;gt;'
    from /usr/local/Cellar/ruby/1.9.3-p327/lib/ruby/1.9.1/rubygems/custom_require.rb:36:in `require'
    from /usr/local/Cellar/ruby/1.9.3-p327/lib/ruby/1.9.1/rubygems/custom_require.rb:36:in `require'
    from /usr/local/lib/ruby/gems/1.9.1/gems/bowline-bundler-0.0.4/lib/bowline/bundler.rb:18:in `&amp;lt;top (required)&amp;gt;'
    from /usr/local/Cellar/ruby/1.9.3-p327/lib/ruby/1.9.1/rubygems/custom_require.rb:36:in `require'
    from /usr/local/Cellar/ruby/1.9.3-p327/lib/ruby/1.9.1/rubygems/custom_require.rb:36:in `require'
    from /usr/local/lib/ruby/gems/1.9.1/gems/bowline-bundler-0.0.4/bin/bowline-bundle:4:in `&amp;lt;main&amp;gt;'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;コケる…。&lt;/p&gt;

&lt;p&gt;Rubyを32bitモードでコンパイルしなくちゃいけなかったのかな…。&lt;/p&gt;

&lt;p&gt;わからないなう…。&lt;/p&gt;

&lt;p&gt;進展があったら追記します。&lt;/p&gt;

&lt;hr /&gt;

&lt;h4&gt;追記（2013-02-13）&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;ruby 1.8.7 (2011-12-28 patchlevel 357) [universal-darwin11.0]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Rubyのバージョンを変えて行ったところ&lt;code&gt;bowline-bundle&lt;/code&gt;を実行できましたが、途中でコケました…。&lt;/p&gt;

&lt;hr /&gt;

&lt;h4&gt;追記（2013-02-14）&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;bowline-bundle&lt;/code&gt;でコケるかは、&lt;code&gt;RubyGems&lt;/code&gt;のバージョンによる気がします。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ruby -v
ruby 1.9.1p378 (2010-01-10 revision 26273) [i386-darwin11.4.0]
$ gem -v
1.3.7
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;この&lt;code&gt;RubyGems&lt;/code&gt;のバージョンが&lt;code&gt;1.3.7&lt;/code&gt;だと&lt;code&gt;bowline-bundle&lt;/code&gt;を実行したときにコケませんが、これより新しいとコケました。&lt;/p&gt;

&lt;p&gt;またこれで実行はできますが、待っていてもfailedします。&lt;/p&gt;

&lt;p&gt;結局うまく行かない…。&lt;/p&gt;

&lt;p&gt;どこが悪いのかわからず、また開発も止まってしまっているようなので、またいつかです…。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>きせーさーちβ版-ChangeLog</title>
   <link href="http://pnlybubbles.github.com/ruby/2013-02-02/kisei-search-changelog"/>
   <updated>2013-02-02T09:30:00+09:00</updated>
   <id>http://pnlybubbles.github.com/ruby/2013-02-02/kisei-search-changelog</id>
   <content type="html">&lt;p&gt;kisei_search&lt;/p&gt;

&lt;h1&gt;0.1b1 (2012-07-14)&lt;/h1&gt;

&lt;p&gt;ユーザーストリームでタイムラインを監視して、リプライを検出し、応答するbot基本メソッド&lt;br/&gt;
登録メソッド&lt;br/&gt;
規制解除時刻の計算メソッド&lt;br/&gt;
ログをkisei_search.logに取るメソッド&lt;br/&gt;
これらを搭載。&lt;/p&gt;

&lt;h1&gt;0.1b2 (2012-07-14)&lt;/h1&gt;

&lt;p&gt;on start upを追加。&lt;br/&gt;
起動時にアップデートが通常の再起動かを確認して、メッセージを変更する。&lt;br/&gt;
コンソール表示を追加。&lt;/p&gt;

&lt;h1&gt;0.1b3 (2012-07-15)&lt;/h1&gt;

&lt;p&gt;管理者からメッセージを取得して代理でつぶやく機能を追加。&lt;br/&gt;
フォロー解除メソッドの追加。&lt;br/&gt;
起動時のアップデートか通常の再起動かを確認するときのバグを修正。みょん(@myuon_myon)さんThanks!&lt;/p&gt;

&lt;h1&gt;0.1b4 (2012-07-15)&lt;/h1&gt;

&lt;p&gt;アドミン用レスポンスメソッドを追加。&lt;br/&gt;
セクション方式の規制解除時間の計算メソッドをアドミンコマンドとして追加。&lt;br/&gt;
アドミンコマンド実行時は通常コマンドを実行しないように修正。&lt;br/&gt;
エラーをログに取るコードにあったバグを修正。&lt;/p&gt;

&lt;h1&gt;0.1b5 (2012-07-16)&lt;/h1&gt;

&lt;p&gt;セクション方式のアルゴリズムを修正。&lt;br/&gt;
アルゴリズムの変更点は、1セクションを3時間とし、セクションのはじめのツイートを解除点として、セクションの開始位置を設定する。それぞれのセクションの開始位置を計算して、最新の解除点に3時間加算した時刻を規制解除時刻とする。&lt;/p&gt;

&lt;h1&gt;0.2b1 (2012-07-16)&lt;/h1&gt;

&lt;p&gt;セクション方式のアルゴリズムをアドミンコマンドから通常コマンドへ変更。&lt;br/&gt;
引数のユーザー名の前に@が入っているときは戻り値にも@を含ませるように修正。&lt;/p&gt;

&lt;h1&gt;0.2b2 (2012-07-16)&lt;/h1&gt;

&lt;p&gt;登録されてない人でもコマンドが使えてしまっていたバグを修正。&lt;br/&gt;
follow,unfollow,parse errorなどのコンソール表示を追加。&lt;br/&gt;
follow,unfollow,unfollow forciblyのログを記録するように追加。&lt;/p&gt;

&lt;h1&gt;0.2b3 (2012-07-16)&lt;/h1&gt;

&lt;p&gt;「いつ」でセクション方式の測定メソッドを呼び出すように変更。&lt;br/&gt;
「いつz」で暫定基準方式の測定メソッドを呼び出すように変更。&lt;br/&gt;
セクション方式のアルゴリズムで取得するツイート数の上限を200ツイートから3200に変更。&lt;br/&gt;
アルゴリズムの変更点はtwitter apiのoptionでpageを利用して上限を引き上げられるように変更。&lt;/p&gt;

&lt;h1&gt;0.2b4 (2012-07-17)&lt;/h1&gt;

&lt;p&gt;解除点が最新のツイートになった時に解除時間がマイナスになるバグを修正。&lt;br/&gt;
アルゴリズムの変更点はunlocknumが0で最新のツイートを示すとき3時間加算するループに入らないため、0の時の条件分岐を追加しバグを修正。&lt;/p&gt;

&lt;h1&gt;0.2b5 (2012-07-17)&lt;/h1&gt;

&lt;p&gt;セクションあたりのポスト数を規制されていない場合には通知する機能を追加。&lt;br/&gt;
アルゴリズムの変更点は最新のツイートのオブジェクトを取得して位置を特定し、送られてきたリプの分の1を加算して127以下の場合かつ、ターゲットが本人ではない時に通知内容にセクション内のツイート数を追加するように変更。&lt;br/&gt;
解除点が最新のツイートでかつ、最新のツイートが現在時刻より3時間以上前の場合に、規制解除時刻を求めてマイナスになるバグを修正。&lt;br/&gt;
アルゴリズムの変更点はセクション内のツイート数が0の時、現在時刻と比較して3時間以上前なのかを調べる条件分岐を追加しバグを修正。&lt;br/&gt;
すこしリプの日本語を変更。&lt;/p&gt;

&lt;h1&gt;0.3b1 (2012-08-09)&lt;/h1&gt;

&lt;p&gt;ツイート取得時にユーザーデータを更新するメソッドを追加。&lt;br/&gt;
メソッドではユーザーのセクション内のポスト数と前回の解除点の時刻を記録する処理、セクション内のツイート数が115の時に通知する処理を実装。&lt;br/&gt;
リプライの応答メソッドもユーザーデータから取得するように変更。&lt;br/&gt;
新アルゴリズムの規制解除時刻割り出しメソッドもリプライ専用のデータ処理を行なっていたものを一般化し引数と戻り値を変更。&lt;br/&gt;
idにリプライを送るメソッドを追加。&lt;br/&gt;
その他ユーザーデータの取得メソッド追加による細かな変更。&lt;/p&gt;

&lt;h1&gt;0.3b2 (2012-09-04)&lt;/h1&gt;

&lt;p&gt;レスポンス取得メソッドから、フォロー、アンフォロー、リセット、規制解除時刻取得、を分離しそれぞれを個別のメソッドに変更。&lt;br/&gt;
ユーザーの追加、削除メソッドをさらに分離し、ユーザー管理メソッドとして追加。&lt;br/&gt;
ユーザー管理用にフォローリストを定義。&lt;br/&gt;
ユーザー管理のデーターチェックメソッドからイニシャライズメソッドを分離。&lt;br/&gt;
アドミンコマンドメソッドをメインスレッドから分離。&lt;br/&gt;
スレッドごとの例外処理からエラー処理メソッドを分離。&lt;br/&gt;
ユーザーストリーム接続時にフォローリストを更新しるよう変更。&lt;br/&gt;
レスポンス取得メソッドの検索方法を変更し高速化。&lt;br/&gt;
ユーザーの確認にユーザーリストを呼び出し確認することでリプライを高速化。&lt;br/&gt;
規制解除測定アルゴリズムにおける多数のバグを修正。&lt;br/&gt;
リプライコメントをよりわかりやすく変更。&lt;br/&gt;
エラー時にリプライを送るように追加。&lt;/p&gt;

&lt;h1&gt;0.3b3 (2012-09-17)&lt;/h1&gt;

&lt;p&gt;規制解除測定アルゴリズムにおけるバグを修正。&lt;br/&gt;
プログラムクラッシュ時にFATALログを取るように追加。&lt;br/&gt;
ログのフォーマットを変更。&lt;/p&gt;

&lt;h1&gt;0.3b4 (2012-10-07)&lt;/h1&gt;

&lt;p&gt;TwitterAPI1.1に対応。&lt;/p&gt;

&lt;h1&gt;0.4a1 (2012-10-26)&lt;/h1&gt;

&lt;p&gt;ユーザーデータの管理をuser idをベースに変更。&lt;br/&gt;
規制解除時刻の割り出し時にセクションが未開始の時、本人のツイートの場合はその本人自身リプライのデータを利用して再計算し直すように修正。&lt;br/&gt;
リプライの内容を一部修正。&lt;br/&gt;
きせーさーち自身の規制垢の追加のために複数アカウントそれぞれの互換性を持たせるために修正。&lt;br/&gt;
規制垢設定メソッドを追加。&lt;br/&gt;
規制垢選択解除・強制解除メソッドを追加。&lt;br/&gt;
規制垢全解除メソッドを追加。&lt;br/&gt;
文字列からのアカウント種類認識用インタプリタメソッドを追加。&lt;br/&gt;
規制解除時刻取得メソッドにリプライのターゲットユーザーを解析時にアカウント種類認識用インタプリタメソッドを呼び、その結果を優先して利用するように追加。&lt;br/&gt;
暫定基準規制解除時刻割り出しアルゴリズムの開発を凍結。&lt;br/&gt;
エラー用の文章を追加。&lt;br/&gt;
ユーザーデータをkisei_search_usr.jsonに保存、読み込みを行うメソッドを追加。&lt;br/&gt;
ユーザーデータのバックアップをbackup/usrに保存するメソッド、そして5分毎に実行するシークエンサーメソッドを追加（また3時間前のデータを自動で削除）。&lt;br/&gt;
きせーさーちの取得ツイート数、ポスト数を記録したログデータをkisei_search_log.jsonに保存、読み込みを行うメソッドを追加。&lt;br/&gt;
ログデータを棒グラフにして出力するメソッドを追加。&lt;br/&gt;
ログのグラフを投稿する管理者コマンドを追加。&lt;br/&gt;
tweettoメソッドの引数にメディアのパス指定を追加（nilの場合は通常投稿）。&lt;br/&gt;
スタートアップ時にtweettoメソッドを呼び出す時、API規制などのエラーが出た場合に終了してまうため例外処理を追加。&lt;br/&gt;
フォロー解除メソッドでユーザーデータを解析し紐付けのあるアカウントのデータを削除し、他のアカウントの設定に影響する場合に通知を行うように修正。&lt;br/&gt;
checkuserメソッドでユーザーの紐付けされたアカウントの規制解除時刻を確認し、そのツイートの時刻が規制解除時刻から30分以内である場合かつ、まだ解除通知を行なっていない場合に解除通知をするように追加。&lt;/p&gt;

&lt;h1&gt;0.4a2 (2012-12-22)&lt;/h1&gt;

&lt;p&gt;解除通知のハッシュに別に生成したハッシュを代入していたためキーが2つ以上格納されず、規制垢が複数登録されているアカウントにおいて複数の解除通知済みのデータが入っていないために連続で通知を行なってしまうバグを修正（&lt;em&gt;_sister&lt;/em&gt;問題）。&lt;br/&gt;
API規制のエラー通知を修正。&lt;br/&gt;
起動時にロードするjsonファイルが存在しない場合には空のjsonファイルを生成するように修正。&lt;br/&gt;
解除通知を行う際に今の時刻とセクション解除の時刻を比較する計算に誤りがあったため修正。&lt;br/&gt;
ロード時にログファイルから前回起動したバージョンを検出する正規表現に誤りがあったため修正。&lt;/p&gt;

&lt;h1&gt;0.5a1 ()&lt;/h1&gt;

&lt;p&gt;一部構造化のように書かれていたメソッドを修正するためにすべて再定義。&lt;br/&gt;
ユーザーストリームを実行するメインスレッド、アカウント操作を主に行うAccountHandlerクラスを定義。&lt;br/&gt;
取得したツイートからコントロール用のオブジェクトを生成するTweetクラスを定義。&lt;br/&gt;
規制解除時刻を計算するメソッド群を持つRegulationModuleモジュールを定義。&lt;br/&gt;
システム操作、初期化に用いるメソッドを持つAppBaseモジュールを定義。&lt;br/&gt;
アカウントタイプを解析するインタプリタメソッドを持つAccountTypeInterpreterモジュールを定義。&lt;br/&gt;
ユーザーデータをTweetのインスタンスから    ハッシュとして保持し操作を行うクラスメソッドを持つUserDetaクラスを定義。&lt;br/&gt;
ログをファイルとして保存するlogメソッドをトップレベルメソッドとして定義。&lt;/p&gt;

&lt;h1&gt;0.4b1 (2013-01-05)&lt;/h1&gt;

&lt;p&gt;tweettoメソッドにおいて、規制された時に規制用アカウントとして @kisei_search2 に切り替える機能を追加。&lt;/p&gt;

&lt;h1&gt;0.4b2 (2013-01-06)&lt;/h1&gt;

&lt;p&gt;twitter gem 4.4.0を使用するように宣言を追加。&lt;br/&gt;
getUnlockPointNewメソッドで規制垢のAPIを利用していたために鍵垢での利用ががきなくなっていたため、すべて本垢のAPIを利用するように修正。&lt;br/&gt;
きせーさーちの詳細のURLを http://pnlybubbles.github.com/ruby/2012-01-18/kisei-search/ に変更。&lt;/p&gt;

&lt;h1&gt;0.4b3 (2013-01-20)&lt;/h1&gt;

&lt;p&gt;W規制垢として @kisei_search3 に対応。&lt;/p&gt;

&lt;h1&gt;0.4b4 (2013-01-28)&lt;/h1&gt;

&lt;p&gt;ユーザーデータとログデータの保存を10ツイート取得ごとに変更。&lt;br/&gt;
プログラムクラッシュ時にユーザーデータとログデータの保存を行うように追加。&lt;/p&gt;

&lt;h1&gt;0.4b5 (2013-01-30)&lt;/h1&gt;

&lt;p&gt;friendsが5000までしか取得できず、一部のユーザーが未登録と判定されていたバグを修正。&lt;br/&gt;
twitter gemのバージョン指定を削除。&lt;br/&gt;
Fatal時のユーザーデータを保存を削除。&lt;/p&gt;

&lt;h1&gt;0.4b6 (2013-02-01)&lt;/h1&gt;

&lt;p&gt;登録済みの設定された規制垢を対象にしてリセットを行える機能を追加。&lt;/p&gt;

&lt;h1&gt;0.4b7 (2013-02-02)&lt;/h1&gt;

&lt;p&gt;DEBUG_定数をデバッグ時と通常実行時の切り替えを容易に変更できるように追加。&lt;br/&gt;
アカウントのoauth_tokenを配列に格納するように変更。&lt;br/&gt;
アカウントのコンシュマーキー、アクセストークンキーを格納した配列のインデックスを変更。&lt;br/&gt;
起動時にそれぞれのアカウントでfriendsを取得し配列を作成するメソッドを定義。&lt;br/&gt;
起動時に起動情報をツイートし、ログファイルに書き込むメソッドを定義。&lt;br/&gt;
tweettoメソッドをoauth_tokenの配列化に伴い変更し、また利用可能なアカウントのみポストを行うように変更。&lt;br/&gt;
getUnlockPointNewメソッド内のデバッグ用の変数を削除。&lt;br/&gt;
120ポスト目ではなく121ポスト目に通知するようになっていたのを修正。&lt;br/&gt;
get_resメソッドの引数にDM判別の変数を追加し、DM時senderキーをuserキーとして取得したハッシュに追加するように追加。&lt;br/&gt;
get_resメソッドでリプライにメディアを指定可能にするように変更。&lt;br/&gt;
add_userメソッドの引数に追加先アカウントの変数を追加。&lt;br/&gt;
対象のリセットを行う再に誤差が出ていたバグを修正。&lt;br/&gt;
アカウントの登録状況、規制垢の設定状況を画像として生成するgetaccountstatusメソッドを定義。&lt;br/&gt;
アカウントの登録状況を調べテキストとして返すgetaccountstatusminiメソッドを定義。&lt;br/&gt;
フォローされているアカウントを調べフォローバックを行うrefollow_checkメソッドを定義。&lt;br/&gt;
規制垢の設定状況をしらばテキストとして返すget_reguraltion_conditionメソッドを定義。（スペルミスではない。次修正。）&lt;br/&gt;
管理者コマンドを簡易的なものを追加、修正。&lt;br/&gt;
エラー取得メソッドがエラーで落ちるバグを修正。&lt;br/&gt;
強制的に対象のユーザーを登録するメソッドadduserforciblyメソッドを定義。&lt;br/&gt;
対象のユーザーデータを取得し、画像として書きだすgetuserdetaメソッドを定義。&lt;br/&gt;
すべてのユーザーデータを取得し、画像として書きだすメソッドgetalluserdetaメソッドを定義。&lt;br/&gt;
ログファイルから指定した行数tail -nで取得し、画像として書きだすgetlogtailメソッドを定義。&lt;br/&gt;
ログデータからグラフを生成するメソッドのフォントのパスを絶対パスを取得し、それを用いるように修正。&lt;br/&gt;
テキストを画像に変換するメソッドtext_to_pngメソッドを定義。&lt;br/&gt;
管理者のリストを配列に変更。&lt;br/&gt;
UserStreamからeventを取得しコンソール表示するように追加。&lt;br/&gt;
UserStreamからDMを取得しコンソール表示するように追加し、DMを取得したときget_resメソッドを呼ぶように追加。&lt;br/&gt;
UserStreamの例外処理のエラー投稿のargument errorを修正。&lt;br/&gt;
tweettoメソッドに引数forciblyを追加し、trueの時には強制的にポストするように追加。&lt;br/&gt;
規制時に登録を来た時に、使用不可であっても強制的にリプライを送るように修正。&lt;br/&gt;
規制時にポストする時、前回の規制されているかのチェックから5分以内である場合にはチェックを行わずに次のアカウントに切り替えるように追加。&lt;br/&gt;
tweettoメソッドに140文字を超える場合はメッセージを分割するように追加。&lt;br/&gt;
unlinksubaccountメソッドでリプライ先のデータを先に削除してしまい、@{}になってしまうバグを修正。&lt;br/&gt;
ファイル保存のインターバルを50回に変更。&lt;br/&gt;
tweettoメッソドにおいて初期起動時に規制垢が規制されていると認識してしまうバグを修正。&lt;br/&gt;
backupusrにおいて5分毎にユーザーデータのバックアップを生成するとき、ディレクトリ内のファイルが144を超えていた場合は最新の144項目以外を削除するように修正。&lt;br/&gt;
登録状況詳細を調べるgetaccountstatusにおいて、一部の分岐で変数のタイプミスのためエラーが出ていたバグを修正。&lt;br/&gt;
rmusrメソッドにおいて、ユーザーの登録を解除してから解除完了の通知のリプライを行なっていたため、ユーザーが登録されていないと誤認識しリプライが遅れていなかったバグをforcibly引数をtureにして修正。&lt;br/&gt;
tweettoメソッドにおいて引数wholeの値がtrueの場合にuを生成せず、ユーザーのidを取得できないために登録状況を調べる際にエラーが出てしまう可能性があったため、状況を出力しjsonデータがnilの場合のみuを生成しないように修正。&lt;br/&gt;
管理者コマンドにevalコマンドを追加。&lt;br/&gt;
SILENT定数を定義し、trueの場合は再起動時の通知をしないように追加。&lt;br/&gt;
隠しギミックを追加（3つ）。&lt;br/&gt;
管理者コマンドにCPU使用率を返すコマンドを追加。&lt;br/&gt;
admin_cmdメソッドをスレッド化。&lt;/p&gt;

&lt;h1&gt;0.4b8 (2013/03/05)&lt;/h1&gt;

&lt;p&gt;TwitterAPI1.1に対応されていなかった部分を修正。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>きせーさーちβ版</title>
   <link href="http://pnlybubbles.github.com/ruby/2013-01-19/kisei-search"/>
   <updated>2013-01-19T07:30:00+09:00</updated>
   <id>http://pnlybubbles.github.com/ruby/2013-01-19/kisei-search</id>
   <content type="html">&lt;p&gt;Twitterの規制解除時間教えてくれるbotです。&lt;/p&gt;

&lt;p&gt;あくまでもβ版。不具合があったりうまく動作しない場合もあります。了解の上でどうぞ。&lt;/p&gt;

&lt;h3&gt;&lt;a href=&quot;http://twitter.com/kisei_search&quot; title=&quot;きせーさーちβ版&quot;&gt;@kisei_search&lt;/a&gt;&lt;/h3&gt;

&lt;h2&gt;既知の問題&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;定期botを高い頻度で使っていると&lt;code&gt;最近3200ポストに3時間以上の離脱が見つからなかったの！&lt;/code&gt;と返されリセットできません。対処法としては定期botを解除し、3時間以上のポストの無い離脱を作るようにしてください。&lt;/li&gt;
&lt;li&gt;サーバーのスペック不足やバグにより、結構な頻度でプログラムが落ちることがあります。&lt;/li&gt;
&lt;li&gt;リセットの集中によりかなりの頻度でAPI規制にかかっている場合があります。&lt;/li&gt;
&lt;li&gt;鍵アカウントの登録はできません。一旦解除してから登録をお願いします。&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;機能&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;規制解除時間を計算&lt;/li&gt;
&lt;li&gt;セクション内120ポストで規制通知&lt;/li&gt;
&lt;li&gt;解除されてから30分以内に解除されたアカウント以外で呟いた時に解除通知&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://twitter.com/kisei_search&quot; title=&quot;きせーさーちβ版&quot;&gt;@kisei_search&lt;/a&gt; が規制にかかっている時、 &lt;a href=&quot;http://twitter.com/kisei_search2&quot; title=&quot;きせーさーちβ版の規制垢&quot;&gt;@kisei_search2&lt;/a&gt; または &lt;a href=&quot;http://twitter.com/kisei_search3&quot; title=&quot;きせーさーちβ版のW規制垢&quot;&gt;@kisei_search3&lt;/a&gt; を利用&lt;/li&gt;
&lt;li&gt;DMによる応答（きせーさーちからの返答はリプライとして返ってきます）&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;コマンド&lt;/h2&gt;

&lt;h3&gt;基本的なコマンド&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left;&quot;&gt;コマンド&lt;/th&gt;
&lt;th style=&quot;text-align:left;&quot;&gt;概要&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left;&quot;&gt;登録&lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt;フォローを返して登録を行います。※1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left;&quot;&gt;フォロー解除&lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt;フォローを解除して登録されたデータをすべて削除します。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left;&quot;&gt;いつ&lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt;取得済みデータから規制解除時刻を計算します。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left;&quot;&gt;&lt;code&gt;screen_name&lt;/code&gt;いつ&lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt;Twitterからデータを取得して規制解除時刻を計算します。登録されているユーザーの場合は取得済みデータから計算します。※2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left;&quot;&gt;第n規制垢いつ&lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt;設定された規制垢の取得済みデータからその規制解除時刻を計算します。※3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left;&quot;&gt;リセット&lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt;Twitterからデータを取得して規制解除時刻を計算します。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left;&quot;&gt;第n規制垢リセット&lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt;Twitterからデータを取得して設定された規制垢の規制解除時刻を計算します。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;h3&gt;規制用アカウントの設定コマンド&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left;&quot;&gt;コマンド&lt;/th&gt;
&lt;th style=&quot;text-align:left;&quot;&gt;概要&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left;&quot;&gt;&lt;code&gt;screen_name&lt;/code&gt;を第n規制垢に設定&lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt;&lt;code&gt;screen_name&lt;/code&gt;を規制垢として設定して紐付けします。&lt;code&gt;screen_name&lt;/code&gt;は登録してある必要があります。※2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left;&quot;&gt;第n規制垢を解除&lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt;第n規制垢に設定されているアカウントとの紐付けを解除します。※3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left;&quot;&gt;規制垢の紐付けを解除&lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt;あなたのアカウントが誰かの規制用アカウントとして設定されている場合に紐付けを強制的に解除します。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left;&quot;&gt;規制垢を初期化&lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt;設定されている規制垢との紐付けをすべて解除します。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left;&quot;&gt;規制垢の状況&lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt;設定されている規制垢の割り当てを調べます。(β)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;p&gt;※1 「登録」とだけであり、「登録。」などでは反応しません。ただし空白は問題ありません。(ex「登録　」)&lt;/p&gt;

&lt;p&gt;※2 &lt;code&gt;screen_name&lt;/code&gt;はユーザー名のことです。@〜〜の部分です。&lt;/p&gt;

&lt;p&gt;※3 nは自然数。「第2規制垢」でなくても「W規制垢」のように書いても認識します。また「第n規制垢いつ」を利用するときには「本垢」も使用できます。&lt;/p&gt;

&lt;h3&gt;登録状況関連のコマンド &lt;font color=&quot;FF0000&quot; size=&quot;2&quot;&gt;### 確認してください ###&lt;/font&gt;&lt;/h3&gt;

&lt;p&gt;きせーさーちには&lt;code&gt;@kisei_search&lt;/code&gt; &lt;code&gt;@kisei_search2&lt;/code&gt; &lt;code&gt;@kisei_search3&lt;/code&gt;があります。これらはきせーさーちのアカウント凍結を防止するため※4、相互フォローの状態でのみ使用可能です。 &lt;br/&gt;
きせーさーちのアカウントは、フォローしてもフォローバックされていない場合は使用不可となっています。下記のコマンドの&lt;code&gt;フォロー&lt;/code&gt;を行うことで使用可能にすることができます。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left;&quot;&gt;コマンド&lt;/th&gt;
&lt;th style=&quot;text-align:left;&quot;&gt;概要&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left;&quot;&gt;登録状況&lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt;あなたがきせーさーちのアカウントを使用可能か、使用不可かを調べます。(β)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left;&quot;&gt;登録状況詳細&lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt;あなたのアカウント、規制用アカウントの登録状況を調べます。(β)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left;&quot;&gt;フォロー&lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt;フォローしているきせーさーちのアカウントを使用可能にします。（フォローバックを行います）(β)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;p&gt;※4 &lt;code&gt;@kisei_search3&lt;/code&gt;は一度凍結されてしまったので次に凍結されてしまうとさよならです。凍結回避にご協力お願いします。&lt;/p&gt;

&lt;h2&gt;チュートリアル&lt;/h2&gt;

&lt;h3&gt;登録から規制アカウントの設定&lt;/h3&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-in-reply-to=&quot;259674252419141632&quot; lang=&quot;ja&quot;&gt;&lt;p&gt;@&lt;a href=&quot;https://twitter.com/pn1y&quot;&gt;pn1y&lt;/a&gt; 登録完了したのっ♪ 使い方がリンクに書いてあるから必ず見てね！ &lt;a href=&quot;http://t.co/ncqX9Nmc&quot; title=&quot;http://ameblo.jp/only-bubbles/entry-11373645951.html&quot;&gt;ameblo.jp/only-bubbles/e…&lt;/a&gt; (10/21 00:15:45)&lt;/p&gt;&amp;mdash; きせーさーちα版さん (@kisei_search2) &lt;a href=&quot;https://twitter.com/kisei_search2/status/259674276020486144&quot; data-datetime=&quot;2012-10-20T15:15:46+00:00&quot;&gt;10月 20, 2012&lt;/a&gt;&lt;/blockquote&gt;


&lt;blockquote class=&quot;twitter-tweet&quot; data-in-reply-to=&quot;259674332517761024&quot; lang=&quot;ja&quot;&gt;&lt;p&gt;@&lt;a href=&quot;https://twitter.com/pnly2&quot;&gt;pnly2&lt;/a&gt; 登録完了したのっ♪ 使い方がリンクに書いてあるから必ず見てね！ &lt;a href=&quot;http://t.co/ncqX9Nmc&quot; title=&quot;http://ameblo.jp/only-bubbles/entry-11373645951.html&quot;&gt;ameblo.jp/only-bubbles/e…&lt;/a&gt; (10/21 00:16:03)&lt;/p&gt;&amp;mdash; きせーさーちα版さん (@kisei_search2) &lt;a href=&quot;https://twitter.com/kisei_search2/status/259674351509573632&quot; data-datetime=&quot;2012-10-20T15:16:04+00:00&quot;&gt;10月 20, 2012&lt;/a&gt;&lt;/blockquote&gt;


&lt;blockquote class=&quot;twitter-tweet&quot; data-in-reply-to=&quot;259674376977387521&quot; lang=&quot;ja&quot;&gt;&lt;p&gt;@&lt;a href=&quot;https://twitter.com/pnly3&quot;&gt;pnly3&lt;/a&gt; 登録完了したのっ♪ 使い方がリンクに書いてあるから必ず見てね！ &lt;a href=&quot;http://t.co/ncqX9Nmc&quot; title=&quot;http://ameblo.jp/only-bubbles/entry-11373645951.html&quot;&gt;ameblo.jp/only-bubbles/e…&lt;/a&gt; (10/21 00:16:15)&lt;/p&gt;&amp;mdash; きせーさーちα版さん (@kisei_search2) &lt;a href=&quot;https://twitter.com/kisei_search2/status/259674399400136704&quot; data-datetime=&quot;2012-10-20T15:16:15+00:00&quot;&gt;10月 20, 2012&lt;/a&gt;&lt;/blockquote&gt;


&lt;blockquote class=&quot;twitter-tweet&quot; data-in-reply-to=&quot;259674986111963136&quot; lang=&quot;ja&quot;&gt;&lt;p&gt;@&lt;a href=&quot;https://twitter.com/pn1y&quot;&gt;pn1y&lt;/a&gt; 第1規制垢に@&lt;a href=&quot;https://twitter.com/pnly2&quot;&gt;pnly2&lt;/a&gt;を設定したの♪ (10/21 00:18:36)&lt;/p&gt;&amp;mdash; きせーさーちα版さん (@kisei_search2) &lt;a href=&quot;https://twitter.com/kisei_search2/status/259674990323064832&quot; data-datetime=&quot;2012-10-20T15:18:36+00:00&quot;&gt;10月 20, 2012&lt;/a&gt;&lt;/blockquote&gt;


&lt;blockquote class=&quot;twitter-tweet&quot; data-in-reply-to=&quot;259675114789040129&quot; lang=&quot;ja&quot;&gt;&lt;p&gt;@&lt;a href=&quot;https://twitter.com/pn1y&quot;&gt;pn1y&lt;/a&gt; 第2規制垢に@&lt;a href=&quot;https://twitter.com/pnly3&quot;&gt;pnly3&lt;/a&gt;を設定したの♪ (10/21 00:19:06)&lt;/p&gt;&amp;mdash; きせーさーちα版さん (@kisei_search2) &lt;a href=&quot;https://twitter.com/kisei_search2/status/259675120065454081&quot; data-datetime=&quot;2012-10-20T15:19:07+00:00&quot;&gt;10月 20, 2012&lt;/a&gt;&lt;/blockquote&gt;


&lt;blockquote class=&quot;twitter-tweet&quot; data-in-reply-to=&quot;259675186268352512&quot; lang=&quot;ja&quot;&gt;&lt;p&gt;@&lt;a href=&quot;https://twitter.com/pn1y&quot;&gt;pn1y&lt;/a&gt; pn1yのセクションあたりのポスト数は 34 なの！規制解除時刻は 10/21 01:31:33 だよっ！あと 1時間 12分 9秒 なのです！ (10/21 00:19:23)&lt;/p&gt;&amp;mdash; きせーさーちα版さん (@kisei_search2) &lt;a href=&quot;https://twitter.com/kisei_search2/status/259675189955145730&quot; data-datetime=&quot;2012-10-20T15:19:24+00:00&quot;&gt;10月 20, 2012&lt;/a&gt;&lt;/blockquote&gt;


&lt;blockquote class=&quot;twitter-tweet&quot; data-in-reply-to=&quot;259675281055440897&quot; lang=&quot;ja&quot;&gt;&lt;p&gt;@&lt;a href=&quot;https://twitter.com/pn1y&quot;&gt;pn1y&lt;/a&gt; pnly2のセクションあたりのポスト数は 93 なの！規制解除時刻は 10/21 01:36:27 だよっ！あと 1時間 16分 41秒 なのです！ (10/21 00:19:46)&lt;/p&gt;&amp;mdash; きせーさーちα版さん (@kisei_search2) &lt;a href=&quot;https://twitter.com/kisei_search2/status/259675286663204864&quot; data-datetime=&quot;2012-10-20T15:19:47+00:00&quot;&gt;10月 20, 2012&lt;/a&gt;&lt;/blockquote&gt;


&lt;blockquote class=&quot;twitter-tweet&quot; data-in-reply-to=&quot;259675357291098114&quot; lang=&quot;ja&quot;&gt;&lt;p&gt;@&lt;a href=&quot;https://twitter.com/pn1y&quot;&gt;pn1y&lt;/a&gt; pnly3のセクションあたりのポスト数は 32 なの！規制解除時刻は 10/21 03:14:58 だよっ！あと 2時間 54分 53秒 なのです！ (10/21 00:20:04)&lt;/p&gt;&amp;mdash; きせーさーちα版さん (@kisei_search2) &lt;a href=&quot;https://twitter.com/kisei_search2/status/259675361485398016&quot; data-datetime=&quot;2012-10-20T15:20:05+00:00&quot;&gt;10月 20, 2012&lt;/a&gt;&lt;/blockquote&gt;


&lt;blockquote class=&quot;twitter-tweet&quot; data-in-reply-to=&quot;259687380255125505&quot; lang=&quot;ja&quot;&gt;&lt;p&gt;@&lt;a href=&quot;https://twitter.com/pnly3&quot;&gt;pnly3&lt;/a&gt; pn1yのセクションあたりのポスト数は 42 なの！規制解除時刻は 10/21 01:31:33 だよっ！あと 23分 42秒 なのです！ (10/21 01:07:51)&lt;/p&gt;&amp;mdash; きせーさーちα版さん (@kisei_search2) &lt;a href=&quot;https://twitter.com/kisei_search2/status/259687385724514305&quot; data-datetime=&quot;2012-10-20T16:07:52+00:00&quot;&gt;10月 20, 2012&lt;/a&gt;&lt;/blockquote&gt;


&lt;h3&gt;規制通知&lt;/h3&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-in-reply-to=&quot;259676470635532289&quot; lang=&quot;ja&quot;&gt;&lt;p&gt;@&lt;a href=&quot;https://twitter.com/pnly3&quot;&gt;pnly3&lt;/a&gt; もうすぐ規制だよっ！規制解除時刻は 10/21 03:14:58 なの！あと 2時間 50分 28秒 なのです！ (10/21 00:24:29)&lt;/p&gt;&amp;mdash; きせーさーちα版さん (@kisei_search2) &lt;a href=&quot;https://twitter.com/kisei_search2/status/259676474267811841&quot; data-datetime=&quot;2012-10-20T15:24:30+00:00&quot;&gt;10月 20, 2012&lt;/a&gt;&lt;/blockquote&gt;


&lt;h3&gt;解除通知&lt;/h3&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-in-reply-to=&quot;259695653842731010&quot; lang=&quot;ja&quot;&gt;&lt;p&gt;@&lt;a href=&quot;https://twitter.com/pn1y&quot;&gt;pn1y&lt;/a&gt; 第1規制垢がたぶん規制解除されたよ♪ (10/21 01:40:43)&lt;/p&gt;&amp;mdash; きせーさーちα版さん (@kisei_search2) &lt;a href=&quot;https://twitter.com/kisei_search2/status/259695659354046464&quot; data-datetime=&quot;2012-10-20T16:40:44+00:00&quot;&gt;10月 20, 2012&lt;/a&gt;&lt;/blockquote&gt;

</content>
 </entry>
 
 <entry>
   <title>ブログを移転しました</title>
   <link href="http://pnlybubbles.github.com/blog/2013-01-16/new-blog"/>
   <updated>2013-01-16T10:30:00+09:00</updated>
   <id>http://pnlybubbles.github.com/blog/2013-01-16/new-blog</id>
   <content type="html">&lt;p&gt;いままで使っていたamebloからGitHubにブログを移転してきました。&lt;/p&gt;

&lt;p&gt;管理上はamebloのほうが楽でしたが、余計なサービスが多くまた自由度が低かったため、ブログのスタイルを気にしはじめてから使いにくくなってしまいました。&lt;/p&gt;

&lt;p&gt;あまり面倒なことはしたくなかったのですが、実際amebloを使っていたときは邪魔な広告などをcssやjQueryで強制的に排除したりしていたため規約に触れるところがありました・・・&lt;/p&gt;

&lt;p&gt;縛られた環境でかつしょっちゅう仕様変更がある中、抜け道を探してスタイルをいじっていたので、よっぽど管理がめんどくさいものになってしまったのです。&lt;/p&gt;

&lt;p&gt;そのため、今回ブログの移転を決意しました。&lt;/p&gt;

&lt;h2&gt;GitHubとJekyll&lt;/h2&gt;

&lt;p&gt;このページは&lt;code&gt;Jekyll&lt;/code&gt;という静的サイトの作成をアシストしてくれるRubyのgemを利用して作成され、静的なページのみで構成されています。&lt;/p&gt;

&lt;p&gt;いま、ブログを構成するというと動的なサイトを作る環境が必要だと考えるのは正しくありません。&lt;/p&gt;

&lt;p&gt;ブログを作るにあたって&lt;code&gt;DISQUS&lt;/code&gt;のようなサービスを利用すればコメント投稿欄も作れますし、動的なサイトは必要としないのです。&lt;/p&gt;

&lt;p&gt;そして、&lt;code&gt;GitHub pages&lt;/code&gt;にpushすれば簡単に公開することができます。&lt;/p&gt;

&lt;p&gt;また、&lt;code&gt;Jekyll-Bootstrap&lt;/code&gt;を利用すれば簡単にデザインを変更することができるひな形を作ることもできます。&lt;/p&gt;

&lt;h2&gt;今度とも宜しくお願いします&lt;/h2&gt;

&lt;p&gt;記事の移行は行わない予定です。&lt;/p&gt;

&lt;p&gt;また、以前のブログはそのまま残しておくつもりです。&lt;/p&gt;

&lt;p&gt;新ブログでもどうぞよろしくお願いします。&lt;/p&gt;
</content>
 </entry>
 
 
</feed>